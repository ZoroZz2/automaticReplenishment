spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ar_db?useSSL=false&allowPublicKeyRetrieval=true&allowMultiQueries=true
    username: root
    password: 123321
    # druid 连接池管理
    druid:
      filter:
        config:
          #开启密钥加密
          enabled: true
        stat:
          enabled: true           # 启动SQL语句监控，同时会影响其他面板中的SQL展示（如：影响"URI监控"中的jdbc数据）
          db-type: mysql          # 数据库类型（实测没啥用，会自动根据上面的连接自动识别）
          log-slow-sql: true      # 记录慢日志（"SQL监控"面板中数值会标记为红色）
          slow-sql-millis: 3000   # 慢日志判定标准（单位：毫秒）
          slow-sql-log-level: ERROR # 自定义日志级别，默认日志级别"ERROR"
      # 配置默认的监控统计拦截的Filter
      # 不配置则监控页面中的SQL无法统计
      # stat - SQL监控配置
      # wall - SQL防火墙配置
      # slf4j - Druid日志配置
      filters: stat,slf4j
      # 初始化连接池大小
      initial-size: 5
      # 连接池最大连接数
      max-active: 20
      # 每个连接上PSCache的最大值
      # 如果大于0，pool-prepared-statements自动开启
      max-pool-prepared-statement-per-connection-size: -1
      # 连接时最大等待时间（单位：毫秒）
      max-wait: 60000
      # 保持空闲连接不被关闭的最小生存时间（单位：毫秒）
      min-evictable-idle-time-millis: 300000
      # 连接池最小空闲数
      min-idle: 5
      # 是否开启PSCache，即是否缓存preparedStatement（提升写入、查询效率）
      # 建议在支持游标的数据库开启，例如：Oracle
      pool-prepared-statements: false
      # 检测获取连接时的有效性
      # 开启后会影响性能
      test-on-borrow: false
      # 检测归还连接时的有效性
      # 开启后会影响性能
      test-on-return: false
      # 检测空闲连接
      # 不影响性能，建议开启
      test-while-idle: true
      # 检测关闭空闲连接的时间间隔（单位：毫秒）
      time-between-eviction-runs-millis: 60000
      # 检测连接有效的SQL
      # 为空则test-while-idle、test-on-borrow、test-on-return配置失效
      validation-query: SELECT 1
      # 检测连接是否有效的超时时间
      validation-query-timeout: 1
      web-stat-filter:
        # 配置统计页面过滤
        enabled: true
        # 排除路径
        exclusions: .js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
        # 开启session统计
        session-stat-enable: true
        # session统计的最大个数
        session-stat-max-count: 100
        # 过滤路径
        url-pattern: /*
      stat-view-servlet:
        enabled: true           # 启用Druid监控面板
        url-pattern: /druid/*   # 面板路径(默认"/druid/*")（Druid已做了处理，不会被自定义过滤器拦截）
        reset-enable: false     # 面板上的重置按钮（禁用后面板上重置按钮依然会显示和互动，但是不起作用）
        login-username: admin   # 账号(默认不需要登录，设置了才需要)
        login-password: 123456  # 密码
        #allow: 127.0.0.1        # 白名单，多个使用逗号隔开（不在白名单中不能访问，默认开启localhost/127.0.0.1）
        #deny: 127.0.0.1         # 黑名单，多个使用逗号隔开
        # 使用Nginx转发导致访问IP丢失，allow、deny均失效，可将allow设置为 192.168.0.0/16,10.0.0.0/8 允许所有请求，注意使用账号保护